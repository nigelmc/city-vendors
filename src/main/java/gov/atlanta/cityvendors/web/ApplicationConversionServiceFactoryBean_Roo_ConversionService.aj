// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package gov.atlanta.cityvendors.web;

import gov.atlanta.cityvendors.domain.Location;
import gov.atlanta.cityvendors.domain.Vendor;
import gov.atlanta.cityvendors.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Location, String> ApplicationConversionServiceFactoryBean.getLocationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<gov.atlanta.cityvendors.domain.Location, java.lang.String>() {
            public String convert(Location location) {
                return new StringBuilder().append(location.getName()).append(' ').append(location.getLongitude()).append(' ').append(location.getLatitude()).toString();
            }
        };
    }
    
    public Converter<Long, Location> ApplicationConversionServiceFactoryBean.getIdToLocationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, gov.atlanta.cityvendors.domain.Location>() {
            public gov.atlanta.cityvendors.domain.Location convert(java.lang.Long id) {
                return Location.findLocation(id);
            }
        };
    }
    
    public Converter<String, Location> ApplicationConversionServiceFactoryBean.getStringToLocationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, gov.atlanta.cityvendors.domain.Location>() {
            public gov.atlanta.cityvendors.domain.Location convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Location.class);
            }
        };
    }
    
    public Converter<Vendor, String> ApplicationConversionServiceFactoryBean.getVendorToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<gov.atlanta.cityvendors.domain.Vendor, java.lang.String>() {
            public String convert(Vendor vendor) {
                return new StringBuilder().append(vendor.getVendorName()).append(' ').append(vendor.getDescription()).append(' ').append(vendor.getShortDescription()).toString();
            }
        };
    }
    
    public Converter<Long, Vendor> ApplicationConversionServiceFactoryBean.getIdToVendorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, gov.atlanta.cityvendors.domain.Vendor>() {
            public gov.atlanta.cityvendors.domain.Vendor convert(java.lang.Long id) {
                return Vendor.findVendor(id);
            }
        };
    }
    
    public Converter<String, Vendor> ApplicationConversionServiceFactoryBean.getStringToVendorConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, gov.atlanta.cityvendors.domain.Vendor>() {
            public gov.atlanta.cityvendors.domain.Vendor convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Vendor.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getLocationToStringConverter());
        registry.addConverter(getIdToLocationConverter());
        registry.addConverter(getStringToLocationConverter());
        registry.addConverter(getVendorToStringConverter());
        registry.addConverter(getIdToVendorConverter());
        registry.addConverter(getStringToVendorConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
